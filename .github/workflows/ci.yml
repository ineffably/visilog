name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run typecheck
      continue-on-error: true  # Allow warnings but still report them
      
    - name: Run tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      continue-on-error: true  # Don't fail on coverage thresholds
      
    - name: Build project
      run: npm run build
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-check:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Check build artifacts
      run: |
        echo "Checking build artifacts..."
        ls -la dist/
        echo "Checking main entry points..."
        test -f dist/index.js || exit 1
        test -f dist/index.esm.js || exit 1
        test -f dist/index.d.ts || exit 1
        echo "Checking client build..."
        test -f dist/client/websocket-logger.js || exit 1
        test -f dist/client/websocket-logger.esm.js || exit 1
        test -f dist/client/websocket-logger.d.ts || exit 1
        echo "Checking server build..."
        test -f dist/server/websocket-logger-server.js || exit 1
        test -f dist/server/websocket-logger-server.esm.js || exit 1
        test -f dist/server/websocket-logger-server.d.ts || exit 1
        echo "All build artifacts present!"
        
    - name: Test package installation
      run: |
        # Pack the package to test it can be installed
        npm pack
        echo "Package created successfully" 